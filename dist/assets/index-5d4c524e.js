(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(o){if(o.ep)return;o.ep=!0;const n=t(o);fetch(o.href,n)}})();document.addEventListener("DOMContentLoaded",function(){m(),setInterval(m,6e4)});const m=()=>{const e=document.querySelector("body"),a=new Date().getHours();console.log(a),a>=6&&a<18?e.classList.add("light-theme"):e.classList.remove("light-theme")};function k(){const e=document.querySelector(".date"),a=document.querySelector(".day"),t=new Date().toLocaleDateString("en-us",{weekday:"short",month:"short",day:"numeric"});e.innerText=t,a.innerText="Today"}k();const u="1817da68c155a71046e37e90227175a0";function b(){return new Promise((e,a)=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(function(t){const r=t.coords.latitude,o=t.coords.longitude;e({latitude:r,longitude:o})},T,{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):a("Geolocation is not supported by this browser.")})}b().then(e=>{console.log("Latitude: ",e.latitude),console.log("Longitude: ",e.longitude),p(e.latitude,e.longitude),setInterval(function(){p(e.latitude,e.longitude)},6e5)}).catch(e=>{console.error(e)});function T(e){switch(e.code){case e.PERMISSION_DENIED:alert("Akses Lokasi Ditolak oleh Pengguna.");break;case e.POSITION_UNAVAILABLE:alert("Informasi Lokasi Tidak Tersedia.");break;case e.TIMEOUT:alert("Waktu Permintaan Lokasi Habis.");break;case e.UNKNOWN_ERROR:alert("Terjadi Kesalahan yang Tidak Diketahui.");break}}const p=async(e,a)=>{try{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${e}&lon=${a}&APPID=${u}&units=metric`),r=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${e}&lon=${a}&APPID=${u}&units=metric`);if(t.ok&&r.ok){const o=await t.json(),n=await r.json();f(o),w(n)}}catch(t){console.error("Error fetching current weather:",t)}},C=document.querySelector(".search-input input");C.addEventListener("keypress",e=>{const a=document.querySelector(".search-input input").value;e.key==="Enter"&&(h(a),setInterval(function(){h(a)},6e5))});const l=document.querySelector(".overlay"),v=document.querySelector("span.close"),g=()=>{l.classList.remove("active")};l.addEventListener("click",g);v.addEventListener("click",g);const f=e=>{const a=document.querySelector(".temperature"),t=document.querySelector(".iconStatus"),r=document.querySelector(".loc"),o=document.querySelector(".weather-img"),n=document.querySelector(".status"),i=document.querySelector(".humidity .value"),s=document.querySelector(".windSpeed .value");let c="";switch(console.log(e),e.weather[0].main){case"Clear":t.src="./img/Partly Cloudy Day.png",t.style.width="55px",o.src="./img/Clear Temp.png",c="Clear";break;case"Clouds":t.src="./img/Cloud.png",t.style.width="55px",o.src="./img/Cloudy Temp.png",c="Cloudy";break;case"Rain":t.src="./img/Rain.png",t.style.width="55px",o.src="./img/Rain Temp.png",c="Rain";break;case"Snow":t.src="./img/Snow.png",t.style.width="55px",o.src="./img/Snow Temp.png",c="Snow";break;case"Haze":t.src="./img/Storm.png",t.style.width="55px",o.src="./img/Storm Temp.png",c="Storm";break;default:t.src=""}a.innerHTML=`${parseInt(e.main.temp)}<span>°C</span>`,n.innerHTML=`${c}`,r.innerHTML=`${e.name}, ${e.sys.country}`,i.innerHTML=`${e.main.humidity}%`,s.innerHTML=`${e.wind.speed}Km/h`},w=e=>{const a=document.querySelector(".forecast");let t="",r="";const o=(s,c)=>{switch(s.weather[0].main){case"Clear":t="./img/Partly Cloudy Day.png",r="Clear";break;case"Clouds":t="./img/Cloud.png",r="Cloudy";break;case"Rain":t="./img/Rain.png",r="Rain";break;case"Snow":t="./img/Snow.png",r="Snow";break;case"Haze":t="./img/Storm.png",r="Storm";break;default:image.src=""}if(c!==0){const d=c===1?"Tommorow":new Date(s.dt_txt).toLocaleDateString("en-us",{weekday:"short",month:"short",day:"numeric"});return`  <div class="minicard active">
      <h4 class="stats">${r}</h4>
      <h4 class="date">${d}</h4>
      <img
        src="${t}"
        alt="status weather"
        width="75px"
        class="iconForecast"
      />
      <h4 class="temperature">${s.main.temp} °C </h4>
    </div>`}},n=[],i=e.list.filter(s=>{const c=new Date(s.dt_txt).getDate();if(!n.includes(c))return n.push(c)});console.log(i),a.innerHTML="",i.forEach((s,c)=>{const d=o(s,c);c!==0&&c!==5&&a.insertAdjacentHTML("beforeend",d)})},h=async e=>{try{const a=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=${u}&units=metric`),t=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${e}&APPID=${u}&units=metric`);if(a.ok&&t.ok){const r=await a.json(),o=await t.json();f(r),w(o)}if(a.status===404||t.status===404){console.log("Error! City not found"),l.classList.add("active");return}}catch(a){console.log(a)}},S=document.querySelector(".bg-intro"),L=document.querySelector(".loader");window.addEventListener("load",()=>{gsap.to(L,{opacity:0,onComplete:y}),gsap.to(S,{opacity:0,onComplete:y}),gsap.timeline().from("header h1",{y:-50,duration:.2,opacity:0}).from("main section",{duration:.2,opacity:0}).from(".card",{duration:.4,opacity:0}).from(".headCard",{y:-50,duration:.3,opacity:0}).from(".main-temp",{y:-50,duration:.3,opacity:0}).from(".weather-img",{y:50,duration:.3,opacity:0}).from(".search-input",{y:100,duration:.4,opacity:0}).from(".content",{y:100,duration:.4,opacity:0})});function y(){L.style.display="none",S.style.display="none"}
